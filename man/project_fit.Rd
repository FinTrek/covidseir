% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project.R
\name{project_fit}
\alias{project_fit}
\title{Project a SEIR fit}
\usage{
project_fit(obj, forecast_days = 30, fixed_f_forecast = NULL, ...)
}
\arguments{
\item{obj}{Output from \code{\link[=fit_seir]{fit_seir()}}.}

\item{forecast_days}{Number of forecast days.}

\item{fixed_f_forecast}{Optional fixed f value for forecast.}

\item{...}{Other arguments to pass to \code{\link[rstan:sampling]{rstan::sampling()}}.}
}
\value{
A \code{\link[dplyr:tibble]{dplyr::tibble()}} from \code{\link[tidybayes:spread_draws]{tidybayes::spread_draws()}}:
\describe{
\item{day}{Day}
\item{data_type}{Data-type column from the case data}
\item{mu}{Expected number of cases}
\item{y_rep}{Posterior predictive replicate observation}
\item{phi}{Posterior draw of phi, the NB2 dispersion parameter, if included}
\item{R0}{Posterior draw of R0}
\item{f_seq}{f parameter segment; segment 0 is the initial no physical distancing}
\item{f_s}{f values; estimated for f_seq > 0}
\item{.iteration}{The MCMC iteration}
}
}
\description{
Project a fit from \code{\link[=fit_seir]{fit_seir()}}, possibly with a forecast.
}
\details{
Set a \code{\link[future:plan]{future::plan()}} and this function will operate in parallel
across MCMC iterations using \pkg{furrr}.
}
\examples{
cases <- c(
  0, 0, 1, 3, 1, 8, 0, 6, 5, 0, 7, 7, 18, 9, 22, 38, 53, 45, 40,
  77, 76, 48, 67, 78, 42, 66, 67, 92, 16, 70, 43, 53, 55, 53, 29,
  26, 37, 25, 45, 34, 40, 35
)
# Example fixed sample fractions:
s1 <- c(rep(0.1, 13), rep(0.2, length(cases) - 13))

# To use parallel processing:
# options(mc.cores = parallel::detectCores() / 2)

m <- fit_seir(
  cases,
  iter = 150,
  chains = 1,
  samp_frac_fixed = s1
)
print(m)

# To use parallel processing, set a 'future' plan:
# library(future)
# plan(multisession, workers = parallel::detectCores() / 2)
p <- project_fit(m)
p

library(ggplot2)
ggplot(p, aes(day, mu, group = .iteration)) +
  geom_line(alpha = 0.4) +
  geom_point(aes(y = y_rep), alpha = 0.2, pch = 21) +
  geom_point(aes(x = day, y = cases), tibble(day = seq_along(cases), cases),
    colour = "red", inherit.aes = FALSE) +
  labs(y = "Reported cases", x = "Day")
}
